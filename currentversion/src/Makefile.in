# Makefile.in generated by automake 1.9.6 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@



srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
bin_PROGRAMS = frogprolog$(EXEEXT)
subdir = src
DIST_COMMON = $(nobase_include_HEADERS) $(noinst_HEADERS) \
	$(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(includedir)"
libLIBRARIES_INSTALL = $(INSTALL_DATA)
LIBRARIES = $(lib_LIBRARIES)
ARFLAGS = cru
libbip_a_AR = $(AR) $(ARFLAGS)
libbip_a_LIBADD =
am_libbip_a_OBJECTS = libbip_a-bip.$(OBJEXT)
libbip_a_OBJECTS = $(am_libbip_a_OBJECTS)
libfrog_a_AR = $(AR) $(ARFLAGS)
libfrog_a_LIBADD =
am_libfrog_a_OBJECTS = libfrog_a-prologenvironment.$(OBJEXT) \
	libfrog_a-prolognames.$(OBJEXT) \
	libfrog_a-basepredicates.$(OBJEXT) \
	libfrog_a-frogprolog.$(OBJEXT) \
	libfrog_a-externparser.$(OBJEXT) \
	libfrog_a-prolog_driver.$(OBJEXT) \
	libfrog_a-enginefactory.$(OBJEXT) \
	libfrog_a-parsersystem.$(OBJEXT)
libfrog_a_OBJECTS = $(am_libfrog_a_OBJECTS)
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am_frogprolog_OBJECTS = frogprolog-codecontainer.$(OBJEXT) \
	frogprolog-cppbuildin.$(OBJEXT) frogprolog-cppengine.$(OBJEXT) \
	frogprolog-cppfactory.$(OBJEXT) \
	frogprolog-enginefactory.$(OBJEXT) \
	frogprolog-identifierdatabase.$(OBJEXT) \
	frogprolog-prologbody.$(OBJEXT) \
	frogprolog-prolog_driver.$(OBJEXT) \
	frogprolog-prologparser.$(OBJEXT) \
	frogprolog-prologterm.$(OBJEXT) frogprolog-Uti3DCore.$(OBJEXT) \
	frogprolog-Uti3DMath.$(OBJEXT) frogprolog-UtiArchiv.$(OBJEXT) \
	frogprolog-utisystem.$(OBJEXT) frogprolog-UtiType.$(OBJEXT) \
	frogprolog-wamengine.$(OBJEXT) frogprolog-wamfactory.$(OBJEXT) \
	frogprolog-UtiString.$(OBJEXT) frogprolog-prologbase.$(OBJEXT) \
	frogprolog-parsersystem.$(OBJEXT)
frogprolog_OBJECTS = $(am_frogprolog_OBJECTS)
frogprolog_LDADD = $(LDADD)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(libbip_a_SOURCES) $(libfrog_a_SOURCES) \
	$(frogprolog_SOURCES)
DIST_SOURCES = $(libbip_a_SOURCES) $(libfrog_a_SOURCES) \
	$(frogprolog_SOURCES)
nobase_includeHEADERS_INSTALL = $(install_sh_DATA)
HEADERS = $(nobase_include_HEADERS) $(noinst_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMDEP_FALSE = @AMDEP_FALSE@
AMDEP_TRUE = @AMDEP_TRUE@
AMTAR = @AMTAR@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
F77 = @F77@
FFLAGS = @FFLAGS@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_F77 = @ac_ct_F77@
ac_ct_RANLIB = @ac_ct_RANLIB@
ac_ct_STRIP = @ac_ct_STRIP@
am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@
am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
datadir = @datadir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
prefix = @prefix@
program_transform_name = @program_transform_name@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
frogprolog_SOURCES = codecontainer.cpp cppbuildin.cpp cppengine.cpp \
	cppfactory.cpp enginefactory.cpp identifierdatabase.cpp prologbody.cpp \
	prolog_driver.cpp prologparser.cpp prologterm.cpp Uti3DCore.cpp Uti3DMath.cpp \
	UtiArchiv.cpp utisystem.cpp UtiType.cpp wamengine.cpp wamfactory.cpp UtiString.cpp \
	prologbase.cpp parsersystem.cpp


# set the include path found by configure
INCLUDES = $(all_includes)

# the library search path.
frogprolog_LDFLAGS = $(all_libraries)
frogprolog_CPPFLAGS = -DUFRAMEWORK -g -Wno-deprecated
noinst_HEADERS = codecontainer.h cppbuildin.h cppengine.h \
	cppfactory.h	cpphelper.h enginefactory.h identifierdatabase.h prolog_driver.h	Uti3DCore.h \
	Uti3DMath.h UtiArchiv.h UtiString.h utisystem.h UtiType.h	wamengine.h wamfactory.h \
	parsersystem.h

lib_LIBRARIES = libfrog.a libbip.a
libfrog_a_CPPFLAGS = -D__BASEPREDICATES__ -g
libfrog_a_SOURCES = prologenvironment.cpp prolognames.cpp basepredicates.cpp \
	frogprolog.cpp externparser.cpp prolog_driver.cpp enginefactory.cpp \
	parsersystem.cpp

libbip_a_CPPFLAGS = 
libbip_a_SOURCES = bip.cpp
nobase_include_HEADERS = prologenvironment.h basepredicates.h prolognames.h frogprolog.h bip.h bip.module
all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-libLIBRARIES: $(lib_LIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(mkdir_p) "$(DESTDIR)$(libdir)"
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(libLIBRARIES_INSTALL) '$$p' '$(DESTDIR)$(libdir)/$$f'"; \
	    $(libLIBRARIES_INSTALL) "$$p" "$(DESTDIR)$(libdir)/$$f"; \
	  else :; fi; \
	done
	@$(POST_INSTALL)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    p=$(am__strip_dir) \
	    echo " $(RANLIB) '$(DESTDIR)$(libdir)/$$p'"; \
	    $(RANLIB) "$(DESTDIR)$(libdir)/$$p"; \
	  else :; fi; \
	done

uninstall-libLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(libdir)/$$p'"; \
	  rm -f "$(DESTDIR)$(libdir)/$$p"; \
	done

clean-libLIBRARIES:
	-test -z "$(lib_LIBRARIES)" || rm -f $(lib_LIBRARIES)
libbip.a: $(libbip_a_OBJECTS) $(libbip_a_DEPENDENCIES) 
	-rm -f libbip.a
	$(libbip_a_AR) libbip.a $(libbip_a_OBJECTS) $(libbip_a_LIBADD)
	$(RANLIB) libbip.a
libfrog.a: $(libfrog_a_OBJECTS) $(libfrog_a_DEPENDENCIES) 
	-rm -f libfrog.a
	$(libfrog_a_AR) libfrog.a $(libfrog_a_OBJECTS) $(libfrog_a_LIBADD)
	$(RANLIB) libfrog.a
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(mkdir_p) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
frogprolog$(EXEEXT): $(frogprolog_OBJECTS) $(frogprolog_DEPENDENCIES) 
	@rm -f frogprolog$(EXEEXT)
	$(CXXLINK) $(frogprolog_LDFLAGS) $(frogprolog_OBJECTS) $(frogprolog_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/frogprolog-Uti3DCore.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/frogprolog-Uti3DMath.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/frogprolog-UtiArchiv.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/frogprolog-UtiString.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/frogprolog-UtiType.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/frogprolog-codecontainer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/frogprolog-cppbuildin.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/frogprolog-cppengine.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/frogprolog-cppfactory.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/frogprolog-enginefactory.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/frogprolog-identifierdatabase.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/frogprolog-parsersystem.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/frogprolog-prolog_driver.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/frogprolog-prologbase.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/frogprolog-prologbody.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/frogprolog-prologparser.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/frogprolog-prologterm.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/frogprolog-utisystem.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/frogprolog-wamengine.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/frogprolog-wamfactory.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbip_a-bip.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libfrog_a-basepredicates.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libfrog_a-enginefactory.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libfrog_a-externparser.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libfrog_a-frogprolog.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libfrog_a-parsersystem.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libfrog_a-prolog_driver.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libfrog_a-prologenvironment.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libfrog_a-prolognames.Po@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	if $(LTCXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

libbip_a-bip.o: bip.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbip_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbip_a-bip.o -MD -MP -MF "$(DEPDIR)/libbip_a-bip.Tpo" -c -o libbip_a-bip.o `test -f 'bip.cpp' || echo '$(srcdir)/'`bip.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbip_a-bip.Tpo" "$(DEPDIR)/libbip_a-bip.Po"; else rm -f "$(DEPDIR)/libbip_a-bip.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='bip.cpp' object='libbip_a-bip.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbip_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbip_a-bip.o `test -f 'bip.cpp' || echo '$(srcdir)/'`bip.cpp

libbip_a-bip.obj: bip.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbip_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbip_a-bip.obj -MD -MP -MF "$(DEPDIR)/libbip_a-bip.Tpo" -c -o libbip_a-bip.obj `if test -f 'bip.cpp'; then $(CYGPATH_W) 'bip.cpp'; else $(CYGPATH_W) '$(srcdir)/bip.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libbip_a-bip.Tpo" "$(DEPDIR)/libbip_a-bip.Po"; else rm -f "$(DEPDIR)/libbip_a-bip.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='bip.cpp' object='libbip_a-bip.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbip_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbip_a-bip.obj `if test -f 'bip.cpp'; then $(CYGPATH_W) 'bip.cpp'; else $(CYGPATH_W) '$(srcdir)/bip.cpp'; fi`

libfrog_a-prologenvironment.o: prologenvironment.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfrog_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libfrog_a-prologenvironment.o -MD -MP -MF "$(DEPDIR)/libfrog_a-prologenvironment.Tpo" -c -o libfrog_a-prologenvironment.o `test -f 'prologenvironment.cpp' || echo '$(srcdir)/'`prologenvironment.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libfrog_a-prologenvironment.Tpo" "$(DEPDIR)/libfrog_a-prologenvironment.Po"; else rm -f "$(DEPDIR)/libfrog_a-prologenvironment.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='prologenvironment.cpp' object='libfrog_a-prologenvironment.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfrog_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libfrog_a-prologenvironment.o `test -f 'prologenvironment.cpp' || echo '$(srcdir)/'`prologenvironment.cpp

libfrog_a-prologenvironment.obj: prologenvironment.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfrog_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libfrog_a-prologenvironment.obj -MD -MP -MF "$(DEPDIR)/libfrog_a-prologenvironment.Tpo" -c -o libfrog_a-prologenvironment.obj `if test -f 'prologenvironment.cpp'; then $(CYGPATH_W) 'prologenvironment.cpp'; else $(CYGPATH_W) '$(srcdir)/prologenvironment.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libfrog_a-prologenvironment.Tpo" "$(DEPDIR)/libfrog_a-prologenvironment.Po"; else rm -f "$(DEPDIR)/libfrog_a-prologenvironment.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='prologenvironment.cpp' object='libfrog_a-prologenvironment.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfrog_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libfrog_a-prologenvironment.obj `if test -f 'prologenvironment.cpp'; then $(CYGPATH_W) 'prologenvironment.cpp'; else $(CYGPATH_W) '$(srcdir)/prologenvironment.cpp'; fi`

libfrog_a-prolognames.o: prolognames.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfrog_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libfrog_a-prolognames.o -MD -MP -MF "$(DEPDIR)/libfrog_a-prolognames.Tpo" -c -o libfrog_a-prolognames.o `test -f 'prolognames.cpp' || echo '$(srcdir)/'`prolognames.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libfrog_a-prolognames.Tpo" "$(DEPDIR)/libfrog_a-prolognames.Po"; else rm -f "$(DEPDIR)/libfrog_a-prolognames.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='prolognames.cpp' object='libfrog_a-prolognames.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfrog_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libfrog_a-prolognames.o `test -f 'prolognames.cpp' || echo '$(srcdir)/'`prolognames.cpp

libfrog_a-prolognames.obj: prolognames.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfrog_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libfrog_a-prolognames.obj -MD -MP -MF "$(DEPDIR)/libfrog_a-prolognames.Tpo" -c -o libfrog_a-prolognames.obj `if test -f 'prolognames.cpp'; then $(CYGPATH_W) 'prolognames.cpp'; else $(CYGPATH_W) '$(srcdir)/prolognames.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libfrog_a-prolognames.Tpo" "$(DEPDIR)/libfrog_a-prolognames.Po"; else rm -f "$(DEPDIR)/libfrog_a-prolognames.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='prolognames.cpp' object='libfrog_a-prolognames.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfrog_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libfrog_a-prolognames.obj `if test -f 'prolognames.cpp'; then $(CYGPATH_W) 'prolognames.cpp'; else $(CYGPATH_W) '$(srcdir)/prolognames.cpp'; fi`

libfrog_a-basepredicates.o: basepredicates.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfrog_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libfrog_a-basepredicates.o -MD -MP -MF "$(DEPDIR)/libfrog_a-basepredicates.Tpo" -c -o libfrog_a-basepredicates.o `test -f 'basepredicates.cpp' || echo '$(srcdir)/'`basepredicates.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libfrog_a-basepredicates.Tpo" "$(DEPDIR)/libfrog_a-basepredicates.Po"; else rm -f "$(DEPDIR)/libfrog_a-basepredicates.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='basepredicates.cpp' object='libfrog_a-basepredicates.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfrog_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libfrog_a-basepredicates.o `test -f 'basepredicates.cpp' || echo '$(srcdir)/'`basepredicates.cpp

libfrog_a-basepredicates.obj: basepredicates.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfrog_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libfrog_a-basepredicates.obj -MD -MP -MF "$(DEPDIR)/libfrog_a-basepredicates.Tpo" -c -o libfrog_a-basepredicates.obj `if test -f 'basepredicates.cpp'; then $(CYGPATH_W) 'basepredicates.cpp'; else $(CYGPATH_W) '$(srcdir)/basepredicates.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libfrog_a-basepredicates.Tpo" "$(DEPDIR)/libfrog_a-basepredicates.Po"; else rm -f "$(DEPDIR)/libfrog_a-basepredicates.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='basepredicates.cpp' object='libfrog_a-basepredicates.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfrog_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libfrog_a-basepredicates.obj `if test -f 'basepredicates.cpp'; then $(CYGPATH_W) 'basepredicates.cpp'; else $(CYGPATH_W) '$(srcdir)/basepredicates.cpp'; fi`

libfrog_a-frogprolog.o: frogprolog.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfrog_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libfrog_a-frogprolog.o -MD -MP -MF "$(DEPDIR)/libfrog_a-frogprolog.Tpo" -c -o libfrog_a-frogprolog.o `test -f 'frogprolog.cpp' || echo '$(srcdir)/'`frogprolog.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libfrog_a-frogprolog.Tpo" "$(DEPDIR)/libfrog_a-frogprolog.Po"; else rm -f "$(DEPDIR)/libfrog_a-frogprolog.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='frogprolog.cpp' object='libfrog_a-frogprolog.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfrog_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libfrog_a-frogprolog.o `test -f 'frogprolog.cpp' || echo '$(srcdir)/'`frogprolog.cpp

libfrog_a-frogprolog.obj: frogprolog.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfrog_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libfrog_a-frogprolog.obj -MD -MP -MF "$(DEPDIR)/libfrog_a-frogprolog.Tpo" -c -o libfrog_a-frogprolog.obj `if test -f 'frogprolog.cpp'; then $(CYGPATH_W) 'frogprolog.cpp'; else $(CYGPATH_W) '$(srcdir)/frogprolog.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libfrog_a-frogprolog.Tpo" "$(DEPDIR)/libfrog_a-frogprolog.Po"; else rm -f "$(DEPDIR)/libfrog_a-frogprolog.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='frogprolog.cpp' object='libfrog_a-frogprolog.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfrog_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libfrog_a-frogprolog.obj `if test -f 'frogprolog.cpp'; then $(CYGPATH_W) 'frogprolog.cpp'; else $(CYGPATH_W) '$(srcdir)/frogprolog.cpp'; fi`

libfrog_a-externparser.o: externparser.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfrog_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libfrog_a-externparser.o -MD -MP -MF "$(DEPDIR)/libfrog_a-externparser.Tpo" -c -o libfrog_a-externparser.o `test -f 'externparser.cpp' || echo '$(srcdir)/'`externparser.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libfrog_a-externparser.Tpo" "$(DEPDIR)/libfrog_a-externparser.Po"; else rm -f "$(DEPDIR)/libfrog_a-externparser.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='externparser.cpp' object='libfrog_a-externparser.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfrog_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libfrog_a-externparser.o `test -f 'externparser.cpp' || echo '$(srcdir)/'`externparser.cpp

libfrog_a-externparser.obj: externparser.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfrog_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libfrog_a-externparser.obj -MD -MP -MF "$(DEPDIR)/libfrog_a-externparser.Tpo" -c -o libfrog_a-externparser.obj `if test -f 'externparser.cpp'; then $(CYGPATH_W) 'externparser.cpp'; else $(CYGPATH_W) '$(srcdir)/externparser.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libfrog_a-externparser.Tpo" "$(DEPDIR)/libfrog_a-externparser.Po"; else rm -f "$(DEPDIR)/libfrog_a-externparser.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='externparser.cpp' object='libfrog_a-externparser.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfrog_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libfrog_a-externparser.obj `if test -f 'externparser.cpp'; then $(CYGPATH_W) 'externparser.cpp'; else $(CYGPATH_W) '$(srcdir)/externparser.cpp'; fi`

libfrog_a-prolog_driver.o: prolog_driver.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfrog_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libfrog_a-prolog_driver.o -MD -MP -MF "$(DEPDIR)/libfrog_a-prolog_driver.Tpo" -c -o libfrog_a-prolog_driver.o `test -f 'prolog_driver.cpp' || echo '$(srcdir)/'`prolog_driver.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libfrog_a-prolog_driver.Tpo" "$(DEPDIR)/libfrog_a-prolog_driver.Po"; else rm -f "$(DEPDIR)/libfrog_a-prolog_driver.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='prolog_driver.cpp' object='libfrog_a-prolog_driver.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfrog_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libfrog_a-prolog_driver.o `test -f 'prolog_driver.cpp' || echo '$(srcdir)/'`prolog_driver.cpp

libfrog_a-prolog_driver.obj: prolog_driver.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfrog_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libfrog_a-prolog_driver.obj -MD -MP -MF "$(DEPDIR)/libfrog_a-prolog_driver.Tpo" -c -o libfrog_a-prolog_driver.obj `if test -f 'prolog_driver.cpp'; then $(CYGPATH_W) 'prolog_driver.cpp'; else $(CYGPATH_W) '$(srcdir)/prolog_driver.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libfrog_a-prolog_driver.Tpo" "$(DEPDIR)/libfrog_a-prolog_driver.Po"; else rm -f "$(DEPDIR)/libfrog_a-prolog_driver.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='prolog_driver.cpp' object='libfrog_a-prolog_driver.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfrog_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libfrog_a-prolog_driver.obj `if test -f 'prolog_driver.cpp'; then $(CYGPATH_W) 'prolog_driver.cpp'; else $(CYGPATH_W) '$(srcdir)/prolog_driver.cpp'; fi`

libfrog_a-enginefactory.o: enginefactory.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfrog_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libfrog_a-enginefactory.o -MD -MP -MF "$(DEPDIR)/libfrog_a-enginefactory.Tpo" -c -o libfrog_a-enginefactory.o `test -f 'enginefactory.cpp' || echo '$(srcdir)/'`enginefactory.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libfrog_a-enginefactory.Tpo" "$(DEPDIR)/libfrog_a-enginefactory.Po"; else rm -f "$(DEPDIR)/libfrog_a-enginefactory.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='enginefactory.cpp' object='libfrog_a-enginefactory.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfrog_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libfrog_a-enginefactory.o `test -f 'enginefactory.cpp' || echo '$(srcdir)/'`enginefactory.cpp

libfrog_a-enginefactory.obj: enginefactory.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfrog_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libfrog_a-enginefactory.obj -MD -MP -MF "$(DEPDIR)/libfrog_a-enginefactory.Tpo" -c -o libfrog_a-enginefactory.obj `if test -f 'enginefactory.cpp'; then $(CYGPATH_W) 'enginefactory.cpp'; else $(CYGPATH_W) '$(srcdir)/enginefactory.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libfrog_a-enginefactory.Tpo" "$(DEPDIR)/libfrog_a-enginefactory.Po"; else rm -f "$(DEPDIR)/libfrog_a-enginefactory.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='enginefactory.cpp' object='libfrog_a-enginefactory.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfrog_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libfrog_a-enginefactory.obj `if test -f 'enginefactory.cpp'; then $(CYGPATH_W) 'enginefactory.cpp'; else $(CYGPATH_W) '$(srcdir)/enginefactory.cpp'; fi`

libfrog_a-parsersystem.o: parsersystem.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfrog_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libfrog_a-parsersystem.o -MD -MP -MF "$(DEPDIR)/libfrog_a-parsersystem.Tpo" -c -o libfrog_a-parsersystem.o `test -f 'parsersystem.cpp' || echo '$(srcdir)/'`parsersystem.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libfrog_a-parsersystem.Tpo" "$(DEPDIR)/libfrog_a-parsersystem.Po"; else rm -f "$(DEPDIR)/libfrog_a-parsersystem.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parsersystem.cpp' object='libfrog_a-parsersystem.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfrog_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libfrog_a-parsersystem.o `test -f 'parsersystem.cpp' || echo '$(srcdir)/'`parsersystem.cpp

libfrog_a-parsersystem.obj: parsersystem.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfrog_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libfrog_a-parsersystem.obj -MD -MP -MF "$(DEPDIR)/libfrog_a-parsersystem.Tpo" -c -o libfrog_a-parsersystem.obj `if test -f 'parsersystem.cpp'; then $(CYGPATH_W) 'parsersystem.cpp'; else $(CYGPATH_W) '$(srcdir)/parsersystem.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libfrog_a-parsersystem.Tpo" "$(DEPDIR)/libfrog_a-parsersystem.Po"; else rm -f "$(DEPDIR)/libfrog_a-parsersystem.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parsersystem.cpp' object='libfrog_a-parsersystem.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfrog_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libfrog_a-parsersystem.obj `if test -f 'parsersystem.cpp'; then $(CYGPATH_W) 'parsersystem.cpp'; else $(CYGPATH_W) '$(srcdir)/parsersystem.cpp'; fi`

frogprolog-codecontainer.o: codecontainer.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frogprolog_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT frogprolog-codecontainer.o -MD -MP -MF "$(DEPDIR)/frogprolog-codecontainer.Tpo" -c -o frogprolog-codecontainer.o `test -f 'codecontainer.cpp' || echo '$(srcdir)/'`codecontainer.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/frogprolog-codecontainer.Tpo" "$(DEPDIR)/frogprolog-codecontainer.Po"; else rm -f "$(DEPDIR)/frogprolog-codecontainer.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='codecontainer.cpp' object='frogprolog-codecontainer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frogprolog_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o frogprolog-codecontainer.o `test -f 'codecontainer.cpp' || echo '$(srcdir)/'`codecontainer.cpp

frogprolog-codecontainer.obj: codecontainer.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frogprolog_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT frogprolog-codecontainer.obj -MD -MP -MF "$(DEPDIR)/frogprolog-codecontainer.Tpo" -c -o frogprolog-codecontainer.obj `if test -f 'codecontainer.cpp'; then $(CYGPATH_W) 'codecontainer.cpp'; else $(CYGPATH_W) '$(srcdir)/codecontainer.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/frogprolog-codecontainer.Tpo" "$(DEPDIR)/frogprolog-codecontainer.Po"; else rm -f "$(DEPDIR)/frogprolog-codecontainer.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='codecontainer.cpp' object='frogprolog-codecontainer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frogprolog_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o frogprolog-codecontainer.obj `if test -f 'codecontainer.cpp'; then $(CYGPATH_W) 'codecontainer.cpp'; else $(CYGPATH_W) '$(srcdir)/codecontainer.cpp'; fi`

frogprolog-cppbuildin.o: cppbuildin.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frogprolog_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT frogprolog-cppbuildin.o -MD -MP -MF "$(DEPDIR)/frogprolog-cppbuildin.Tpo" -c -o frogprolog-cppbuildin.o `test -f 'cppbuildin.cpp' || echo '$(srcdir)/'`cppbuildin.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/frogprolog-cppbuildin.Tpo" "$(DEPDIR)/frogprolog-cppbuildin.Po"; else rm -f "$(DEPDIR)/frogprolog-cppbuildin.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='cppbuildin.cpp' object='frogprolog-cppbuildin.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frogprolog_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o frogprolog-cppbuildin.o `test -f 'cppbuildin.cpp' || echo '$(srcdir)/'`cppbuildin.cpp

frogprolog-cppbuildin.obj: cppbuildin.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frogprolog_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT frogprolog-cppbuildin.obj -MD -MP -MF "$(DEPDIR)/frogprolog-cppbuildin.Tpo" -c -o frogprolog-cppbuildin.obj `if test -f 'cppbuildin.cpp'; then $(CYGPATH_W) 'cppbuildin.cpp'; else $(CYGPATH_W) '$(srcdir)/cppbuildin.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/frogprolog-cppbuildin.Tpo" "$(DEPDIR)/frogprolog-cppbuildin.Po"; else rm -f "$(DEPDIR)/frogprolog-cppbuildin.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='cppbuildin.cpp' object='frogprolog-cppbuildin.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frogprolog_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o frogprolog-cppbuildin.obj `if test -f 'cppbuildin.cpp'; then $(CYGPATH_W) 'cppbuildin.cpp'; else $(CYGPATH_W) '$(srcdir)/cppbuildin.cpp'; fi`

frogprolog-cppengine.o: cppengine.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frogprolog_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT frogprolog-cppengine.o -MD -MP -MF "$(DEPDIR)/frogprolog-cppengine.Tpo" -c -o frogprolog-cppengine.o `test -f 'cppengine.cpp' || echo '$(srcdir)/'`cppengine.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/frogprolog-cppengine.Tpo" "$(DEPDIR)/frogprolog-cppengine.Po"; else rm -f "$(DEPDIR)/frogprolog-cppengine.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='cppengine.cpp' object='frogprolog-cppengine.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frogprolog_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o frogprolog-cppengine.o `test -f 'cppengine.cpp' || echo '$(srcdir)/'`cppengine.cpp

frogprolog-cppengine.obj: cppengine.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frogprolog_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT frogprolog-cppengine.obj -MD -MP -MF "$(DEPDIR)/frogprolog-cppengine.Tpo" -c -o frogprolog-cppengine.obj `if test -f 'cppengine.cpp'; then $(CYGPATH_W) 'cppengine.cpp'; else $(CYGPATH_W) '$(srcdir)/cppengine.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/frogprolog-cppengine.Tpo" "$(DEPDIR)/frogprolog-cppengine.Po"; else rm -f "$(DEPDIR)/frogprolog-cppengine.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='cppengine.cpp' object='frogprolog-cppengine.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frogprolog_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o frogprolog-cppengine.obj `if test -f 'cppengine.cpp'; then $(CYGPATH_W) 'cppengine.cpp'; else $(CYGPATH_W) '$(srcdir)/cppengine.cpp'; fi`

frogprolog-cppfactory.o: cppfactory.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frogprolog_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT frogprolog-cppfactory.o -MD -MP -MF "$(DEPDIR)/frogprolog-cppfactory.Tpo" -c -o frogprolog-cppfactory.o `test -f 'cppfactory.cpp' || echo '$(srcdir)/'`cppfactory.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/frogprolog-cppfactory.Tpo" "$(DEPDIR)/frogprolog-cppfactory.Po"; else rm -f "$(DEPDIR)/frogprolog-cppfactory.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='cppfactory.cpp' object='frogprolog-cppfactory.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frogprolog_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o frogprolog-cppfactory.o `test -f 'cppfactory.cpp' || echo '$(srcdir)/'`cppfactory.cpp

frogprolog-cppfactory.obj: cppfactory.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frogprolog_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT frogprolog-cppfactory.obj -MD -MP -MF "$(DEPDIR)/frogprolog-cppfactory.Tpo" -c -o frogprolog-cppfactory.obj `if test -f 'cppfactory.cpp'; then $(CYGPATH_W) 'cppfactory.cpp'; else $(CYGPATH_W) '$(srcdir)/cppfactory.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/frogprolog-cppfactory.Tpo" "$(DEPDIR)/frogprolog-cppfactory.Po"; else rm -f "$(DEPDIR)/frogprolog-cppfactory.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='cppfactory.cpp' object='frogprolog-cppfactory.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frogprolog_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o frogprolog-cppfactory.obj `if test -f 'cppfactory.cpp'; then $(CYGPATH_W) 'cppfactory.cpp'; else $(CYGPATH_W) '$(srcdir)/cppfactory.cpp'; fi`

frogprolog-enginefactory.o: enginefactory.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frogprolog_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT frogprolog-enginefactory.o -MD -MP -MF "$(DEPDIR)/frogprolog-enginefactory.Tpo" -c -o frogprolog-enginefactory.o `test -f 'enginefactory.cpp' || echo '$(srcdir)/'`enginefactory.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/frogprolog-enginefactory.Tpo" "$(DEPDIR)/frogprolog-enginefactory.Po"; else rm -f "$(DEPDIR)/frogprolog-enginefactory.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='enginefactory.cpp' object='frogprolog-enginefactory.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frogprolog_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o frogprolog-enginefactory.o `test -f 'enginefactory.cpp' || echo '$(srcdir)/'`enginefactory.cpp

frogprolog-enginefactory.obj: enginefactory.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frogprolog_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT frogprolog-enginefactory.obj -MD -MP -MF "$(DEPDIR)/frogprolog-enginefactory.Tpo" -c -o frogprolog-enginefactory.obj `if test -f 'enginefactory.cpp'; then $(CYGPATH_W) 'enginefactory.cpp'; else $(CYGPATH_W) '$(srcdir)/enginefactory.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/frogprolog-enginefactory.Tpo" "$(DEPDIR)/frogprolog-enginefactory.Po"; else rm -f "$(DEPDIR)/frogprolog-enginefactory.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='enginefactory.cpp' object='frogprolog-enginefactory.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frogprolog_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o frogprolog-enginefactory.obj `if test -f 'enginefactory.cpp'; then $(CYGPATH_W) 'enginefactory.cpp'; else $(CYGPATH_W) '$(srcdir)/enginefactory.cpp'; fi`

frogprolog-identifierdatabase.o: identifierdatabase.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frogprolog_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT frogprolog-identifierdatabase.o -MD -MP -MF "$(DEPDIR)/frogprolog-identifierdatabase.Tpo" -c -o frogprolog-identifierdatabase.o `test -f 'identifierdatabase.cpp' || echo '$(srcdir)/'`identifierdatabase.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/frogprolog-identifierdatabase.Tpo" "$(DEPDIR)/frogprolog-identifierdatabase.Po"; else rm -f "$(DEPDIR)/frogprolog-identifierdatabase.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='identifierdatabase.cpp' object='frogprolog-identifierdatabase.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frogprolog_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o frogprolog-identifierdatabase.o `test -f 'identifierdatabase.cpp' || echo '$(srcdir)/'`identifierdatabase.cpp

frogprolog-identifierdatabase.obj: identifierdatabase.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frogprolog_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT frogprolog-identifierdatabase.obj -MD -MP -MF "$(DEPDIR)/frogprolog-identifierdatabase.Tpo" -c -o frogprolog-identifierdatabase.obj `if test -f 'identifierdatabase.cpp'; then $(CYGPATH_W) 'identifierdatabase.cpp'; else $(CYGPATH_W) '$(srcdir)/identifierdatabase.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/frogprolog-identifierdatabase.Tpo" "$(DEPDIR)/frogprolog-identifierdatabase.Po"; else rm -f "$(DEPDIR)/frogprolog-identifierdatabase.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='identifierdatabase.cpp' object='frogprolog-identifierdatabase.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frogprolog_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o frogprolog-identifierdatabase.obj `if test -f 'identifierdatabase.cpp'; then $(CYGPATH_W) 'identifierdatabase.cpp'; else $(CYGPATH_W) '$(srcdir)/identifierdatabase.cpp'; fi`

frogprolog-prologbody.o: prologbody.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frogprolog_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT frogprolog-prologbody.o -MD -MP -MF "$(DEPDIR)/frogprolog-prologbody.Tpo" -c -o frogprolog-prologbody.o `test -f 'prologbody.cpp' || echo '$(srcdir)/'`prologbody.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/frogprolog-prologbody.Tpo" "$(DEPDIR)/frogprolog-prologbody.Po"; else rm -f "$(DEPDIR)/frogprolog-prologbody.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='prologbody.cpp' object='frogprolog-prologbody.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frogprolog_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o frogprolog-prologbody.o `test -f 'prologbody.cpp' || echo '$(srcdir)/'`prologbody.cpp

frogprolog-prologbody.obj: prologbody.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frogprolog_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT frogprolog-prologbody.obj -MD -MP -MF "$(DEPDIR)/frogprolog-prologbody.Tpo" -c -o frogprolog-prologbody.obj `if test -f 'prologbody.cpp'; then $(CYGPATH_W) 'prologbody.cpp'; else $(CYGPATH_W) '$(srcdir)/prologbody.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/frogprolog-prologbody.Tpo" "$(DEPDIR)/frogprolog-prologbody.Po"; else rm -f "$(DEPDIR)/frogprolog-prologbody.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='prologbody.cpp' object='frogprolog-prologbody.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frogprolog_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o frogprolog-prologbody.obj `if test -f 'prologbody.cpp'; then $(CYGPATH_W) 'prologbody.cpp'; else $(CYGPATH_W) '$(srcdir)/prologbody.cpp'; fi`

frogprolog-prolog_driver.o: prolog_driver.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frogprolog_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT frogprolog-prolog_driver.o -MD -MP -MF "$(DEPDIR)/frogprolog-prolog_driver.Tpo" -c -o frogprolog-prolog_driver.o `test -f 'prolog_driver.cpp' || echo '$(srcdir)/'`prolog_driver.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/frogprolog-prolog_driver.Tpo" "$(DEPDIR)/frogprolog-prolog_driver.Po"; else rm -f "$(DEPDIR)/frogprolog-prolog_driver.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='prolog_driver.cpp' object='frogprolog-prolog_driver.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frogprolog_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o frogprolog-prolog_driver.o `test -f 'prolog_driver.cpp' || echo '$(srcdir)/'`prolog_driver.cpp

frogprolog-prolog_driver.obj: prolog_driver.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frogprolog_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT frogprolog-prolog_driver.obj -MD -MP -MF "$(DEPDIR)/frogprolog-prolog_driver.Tpo" -c -o frogprolog-prolog_driver.obj `if test -f 'prolog_driver.cpp'; then $(CYGPATH_W) 'prolog_driver.cpp'; else $(CYGPATH_W) '$(srcdir)/prolog_driver.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/frogprolog-prolog_driver.Tpo" "$(DEPDIR)/frogprolog-prolog_driver.Po"; else rm -f "$(DEPDIR)/frogprolog-prolog_driver.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='prolog_driver.cpp' object='frogprolog-prolog_driver.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frogprolog_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o frogprolog-prolog_driver.obj `if test -f 'prolog_driver.cpp'; then $(CYGPATH_W) 'prolog_driver.cpp'; else $(CYGPATH_W) '$(srcdir)/prolog_driver.cpp'; fi`

frogprolog-prologparser.o: prologparser.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frogprolog_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT frogprolog-prologparser.o -MD -MP -MF "$(DEPDIR)/frogprolog-prologparser.Tpo" -c -o frogprolog-prologparser.o `test -f 'prologparser.cpp' || echo '$(srcdir)/'`prologparser.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/frogprolog-prologparser.Tpo" "$(DEPDIR)/frogprolog-prologparser.Po"; else rm -f "$(DEPDIR)/frogprolog-prologparser.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='prologparser.cpp' object='frogprolog-prologparser.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frogprolog_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o frogprolog-prologparser.o `test -f 'prologparser.cpp' || echo '$(srcdir)/'`prologparser.cpp

frogprolog-prologparser.obj: prologparser.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frogprolog_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT frogprolog-prologparser.obj -MD -MP -MF "$(DEPDIR)/frogprolog-prologparser.Tpo" -c -o frogprolog-prologparser.obj `if test -f 'prologparser.cpp'; then $(CYGPATH_W) 'prologparser.cpp'; else $(CYGPATH_W) '$(srcdir)/prologparser.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/frogprolog-prologparser.Tpo" "$(DEPDIR)/frogprolog-prologparser.Po"; else rm -f "$(DEPDIR)/frogprolog-prologparser.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='prologparser.cpp' object='frogprolog-prologparser.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frogprolog_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o frogprolog-prologparser.obj `if test -f 'prologparser.cpp'; then $(CYGPATH_W) 'prologparser.cpp'; else $(CYGPATH_W) '$(srcdir)/prologparser.cpp'; fi`

frogprolog-prologterm.o: prologterm.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frogprolog_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT frogprolog-prologterm.o -MD -MP -MF "$(DEPDIR)/frogprolog-prologterm.Tpo" -c -o frogprolog-prologterm.o `test -f 'prologterm.cpp' || echo '$(srcdir)/'`prologterm.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/frogprolog-prologterm.Tpo" "$(DEPDIR)/frogprolog-prologterm.Po"; else rm -f "$(DEPDIR)/frogprolog-prologterm.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='prologterm.cpp' object='frogprolog-prologterm.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frogprolog_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o frogprolog-prologterm.o `test -f 'prologterm.cpp' || echo '$(srcdir)/'`prologterm.cpp

frogprolog-prologterm.obj: prologterm.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frogprolog_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT frogprolog-prologterm.obj -MD -MP -MF "$(DEPDIR)/frogprolog-prologterm.Tpo" -c -o frogprolog-prologterm.obj `if test -f 'prologterm.cpp'; then $(CYGPATH_W) 'prologterm.cpp'; else $(CYGPATH_W) '$(srcdir)/prologterm.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/frogprolog-prologterm.Tpo" "$(DEPDIR)/frogprolog-prologterm.Po"; else rm -f "$(DEPDIR)/frogprolog-prologterm.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='prologterm.cpp' object='frogprolog-prologterm.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frogprolog_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o frogprolog-prologterm.obj `if test -f 'prologterm.cpp'; then $(CYGPATH_W) 'prologterm.cpp'; else $(CYGPATH_W) '$(srcdir)/prologterm.cpp'; fi`

frogprolog-Uti3DCore.o: Uti3DCore.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frogprolog_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT frogprolog-Uti3DCore.o -MD -MP -MF "$(DEPDIR)/frogprolog-Uti3DCore.Tpo" -c -o frogprolog-Uti3DCore.o `test -f 'Uti3DCore.cpp' || echo '$(srcdir)/'`Uti3DCore.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/frogprolog-Uti3DCore.Tpo" "$(DEPDIR)/frogprolog-Uti3DCore.Po"; else rm -f "$(DEPDIR)/frogprolog-Uti3DCore.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Uti3DCore.cpp' object='frogprolog-Uti3DCore.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frogprolog_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o frogprolog-Uti3DCore.o `test -f 'Uti3DCore.cpp' || echo '$(srcdir)/'`Uti3DCore.cpp

frogprolog-Uti3DCore.obj: Uti3DCore.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frogprolog_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT frogprolog-Uti3DCore.obj -MD -MP -MF "$(DEPDIR)/frogprolog-Uti3DCore.Tpo" -c -o frogprolog-Uti3DCore.obj `if test -f 'Uti3DCore.cpp'; then $(CYGPATH_W) 'Uti3DCore.cpp'; else $(CYGPATH_W) '$(srcdir)/Uti3DCore.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/frogprolog-Uti3DCore.Tpo" "$(DEPDIR)/frogprolog-Uti3DCore.Po"; else rm -f "$(DEPDIR)/frogprolog-Uti3DCore.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Uti3DCore.cpp' object='frogprolog-Uti3DCore.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frogprolog_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o frogprolog-Uti3DCore.obj `if test -f 'Uti3DCore.cpp'; then $(CYGPATH_W) 'Uti3DCore.cpp'; else $(CYGPATH_W) '$(srcdir)/Uti3DCore.cpp'; fi`

frogprolog-Uti3DMath.o: Uti3DMath.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frogprolog_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT frogprolog-Uti3DMath.o -MD -MP -MF "$(DEPDIR)/frogprolog-Uti3DMath.Tpo" -c -o frogprolog-Uti3DMath.o `test -f 'Uti3DMath.cpp' || echo '$(srcdir)/'`Uti3DMath.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/frogprolog-Uti3DMath.Tpo" "$(DEPDIR)/frogprolog-Uti3DMath.Po"; else rm -f "$(DEPDIR)/frogprolog-Uti3DMath.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Uti3DMath.cpp' object='frogprolog-Uti3DMath.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frogprolog_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o frogprolog-Uti3DMath.o `test -f 'Uti3DMath.cpp' || echo '$(srcdir)/'`Uti3DMath.cpp

frogprolog-Uti3DMath.obj: Uti3DMath.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frogprolog_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT frogprolog-Uti3DMath.obj -MD -MP -MF "$(DEPDIR)/frogprolog-Uti3DMath.Tpo" -c -o frogprolog-Uti3DMath.obj `if test -f 'Uti3DMath.cpp'; then $(CYGPATH_W) 'Uti3DMath.cpp'; else $(CYGPATH_W) '$(srcdir)/Uti3DMath.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/frogprolog-Uti3DMath.Tpo" "$(DEPDIR)/frogprolog-Uti3DMath.Po"; else rm -f "$(DEPDIR)/frogprolog-Uti3DMath.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Uti3DMath.cpp' object='frogprolog-Uti3DMath.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frogprolog_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o frogprolog-Uti3DMath.obj `if test -f 'Uti3DMath.cpp'; then $(CYGPATH_W) 'Uti3DMath.cpp'; else $(CYGPATH_W) '$(srcdir)/Uti3DMath.cpp'; fi`

frogprolog-UtiArchiv.o: UtiArchiv.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frogprolog_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT frogprolog-UtiArchiv.o -MD -MP -MF "$(DEPDIR)/frogprolog-UtiArchiv.Tpo" -c -o frogprolog-UtiArchiv.o `test -f 'UtiArchiv.cpp' || echo '$(srcdir)/'`UtiArchiv.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/frogprolog-UtiArchiv.Tpo" "$(DEPDIR)/frogprolog-UtiArchiv.Po"; else rm -f "$(DEPDIR)/frogprolog-UtiArchiv.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='UtiArchiv.cpp' object='frogprolog-UtiArchiv.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frogprolog_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o frogprolog-UtiArchiv.o `test -f 'UtiArchiv.cpp' || echo '$(srcdir)/'`UtiArchiv.cpp

frogprolog-UtiArchiv.obj: UtiArchiv.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frogprolog_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT frogprolog-UtiArchiv.obj -MD -MP -MF "$(DEPDIR)/frogprolog-UtiArchiv.Tpo" -c -o frogprolog-UtiArchiv.obj `if test -f 'UtiArchiv.cpp'; then $(CYGPATH_W) 'UtiArchiv.cpp'; else $(CYGPATH_W) '$(srcdir)/UtiArchiv.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/frogprolog-UtiArchiv.Tpo" "$(DEPDIR)/frogprolog-UtiArchiv.Po"; else rm -f "$(DEPDIR)/frogprolog-UtiArchiv.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='UtiArchiv.cpp' object='frogprolog-UtiArchiv.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frogprolog_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o frogprolog-UtiArchiv.obj `if test -f 'UtiArchiv.cpp'; then $(CYGPATH_W) 'UtiArchiv.cpp'; else $(CYGPATH_W) '$(srcdir)/UtiArchiv.cpp'; fi`

frogprolog-utisystem.o: utisystem.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frogprolog_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT frogprolog-utisystem.o -MD -MP -MF "$(DEPDIR)/frogprolog-utisystem.Tpo" -c -o frogprolog-utisystem.o `test -f 'utisystem.cpp' || echo '$(srcdir)/'`utisystem.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/frogprolog-utisystem.Tpo" "$(DEPDIR)/frogprolog-utisystem.Po"; else rm -f "$(DEPDIR)/frogprolog-utisystem.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='utisystem.cpp' object='frogprolog-utisystem.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frogprolog_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o frogprolog-utisystem.o `test -f 'utisystem.cpp' || echo '$(srcdir)/'`utisystem.cpp

frogprolog-utisystem.obj: utisystem.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frogprolog_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT frogprolog-utisystem.obj -MD -MP -MF "$(DEPDIR)/frogprolog-utisystem.Tpo" -c -o frogprolog-utisystem.obj `if test -f 'utisystem.cpp'; then $(CYGPATH_W) 'utisystem.cpp'; else $(CYGPATH_W) '$(srcdir)/utisystem.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/frogprolog-utisystem.Tpo" "$(DEPDIR)/frogprolog-utisystem.Po"; else rm -f "$(DEPDIR)/frogprolog-utisystem.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='utisystem.cpp' object='frogprolog-utisystem.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frogprolog_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o frogprolog-utisystem.obj `if test -f 'utisystem.cpp'; then $(CYGPATH_W) 'utisystem.cpp'; else $(CYGPATH_W) '$(srcdir)/utisystem.cpp'; fi`

frogprolog-UtiType.o: UtiType.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frogprolog_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT frogprolog-UtiType.o -MD -MP -MF "$(DEPDIR)/frogprolog-UtiType.Tpo" -c -o frogprolog-UtiType.o `test -f 'UtiType.cpp' || echo '$(srcdir)/'`UtiType.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/frogprolog-UtiType.Tpo" "$(DEPDIR)/frogprolog-UtiType.Po"; else rm -f "$(DEPDIR)/frogprolog-UtiType.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='UtiType.cpp' object='frogprolog-UtiType.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frogprolog_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o frogprolog-UtiType.o `test -f 'UtiType.cpp' || echo '$(srcdir)/'`UtiType.cpp

frogprolog-UtiType.obj: UtiType.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frogprolog_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT frogprolog-UtiType.obj -MD -MP -MF "$(DEPDIR)/frogprolog-UtiType.Tpo" -c -o frogprolog-UtiType.obj `if test -f 'UtiType.cpp'; then $(CYGPATH_W) 'UtiType.cpp'; else $(CYGPATH_W) '$(srcdir)/UtiType.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/frogprolog-UtiType.Tpo" "$(DEPDIR)/frogprolog-UtiType.Po"; else rm -f "$(DEPDIR)/frogprolog-UtiType.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='UtiType.cpp' object='frogprolog-UtiType.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frogprolog_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o frogprolog-UtiType.obj `if test -f 'UtiType.cpp'; then $(CYGPATH_W) 'UtiType.cpp'; else $(CYGPATH_W) '$(srcdir)/UtiType.cpp'; fi`

frogprolog-wamengine.o: wamengine.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frogprolog_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT frogprolog-wamengine.o -MD -MP -MF "$(DEPDIR)/frogprolog-wamengine.Tpo" -c -o frogprolog-wamengine.o `test -f 'wamengine.cpp' || echo '$(srcdir)/'`wamengine.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/frogprolog-wamengine.Tpo" "$(DEPDIR)/frogprolog-wamengine.Po"; else rm -f "$(DEPDIR)/frogprolog-wamengine.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='wamengine.cpp' object='frogprolog-wamengine.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frogprolog_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o frogprolog-wamengine.o `test -f 'wamengine.cpp' || echo '$(srcdir)/'`wamengine.cpp

frogprolog-wamengine.obj: wamengine.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frogprolog_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT frogprolog-wamengine.obj -MD -MP -MF "$(DEPDIR)/frogprolog-wamengine.Tpo" -c -o frogprolog-wamengine.obj `if test -f 'wamengine.cpp'; then $(CYGPATH_W) 'wamengine.cpp'; else $(CYGPATH_W) '$(srcdir)/wamengine.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/frogprolog-wamengine.Tpo" "$(DEPDIR)/frogprolog-wamengine.Po"; else rm -f "$(DEPDIR)/frogprolog-wamengine.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='wamengine.cpp' object='frogprolog-wamengine.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frogprolog_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o frogprolog-wamengine.obj `if test -f 'wamengine.cpp'; then $(CYGPATH_W) 'wamengine.cpp'; else $(CYGPATH_W) '$(srcdir)/wamengine.cpp'; fi`

frogprolog-wamfactory.o: wamfactory.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frogprolog_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT frogprolog-wamfactory.o -MD -MP -MF "$(DEPDIR)/frogprolog-wamfactory.Tpo" -c -o frogprolog-wamfactory.o `test -f 'wamfactory.cpp' || echo '$(srcdir)/'`wamfactory.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/frogprolog-wamfactory.Tpo" "$(DEPDIR)/frogprolog-wamfactory.Po"; else rm -f "$(DEPDIR)/frogprolog-wamfactory.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='wamfactory.cpp' object='frogprolog-wamfactory.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frogprolog_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o frogprolog-wamfactory.o `test -f 'wamfactory.cpp' || echo '$(srcdir)/'`wamfactory.cpp

frogprolog-wamfactory.obj: wamfactory.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frogprolog_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT frogprolog-wamfactory.obj -MD -MP -MF "$(DEPDIR)/frogprolog-wamfactory.Tpo" -c -o frogprolog-wamfactory.obj `if test -f 'wamfactory.cpp'; then $(CYGPATH_W) 'wamfactory.cpp'; else $(CYGPATH_W) '$(srcdir)/wamfactory.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/frogprolog-wamfactory.Tpo" "$(DEPDIR)/frogprolog-wamfactory.Po"; else rm -f "$(DEPDIR)/frogprolog-wamfactory.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='wamfactory.cpp' object='frogprolog-wamfactory.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frogprolog_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o frogprolog-wamfactory.obj `if test -f 'wamfactory.cpp'; then $(CYGPATH_W) 'wamfactory.cpp'; else $(CYGPATH_W) '$(srcdir)/wamfactory.cpp'; fi`

frogprolog-UtiString.o: UtiString.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frogprolog_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT frogprolog-UtiString.o -MD -MP -MF "$(DEPDIR)/frogprolog-UtiString.Tpo" -c -o frogprolog-UtiString.o `test -f 'UtiString.cpp' || echo '$(srcdir)/'`UtiString.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/frogprolog-UtiString.Tpo" "$(DEPDIR)/frogprolog-UtiString.Po"; else rm -f "$(DEPDIR)/frogprolog-UtiString.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='UtiString.cpp' object='frogprolog-UtiString.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frogprolog_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o frogprolog-UtiString.o `test -f 'UtiString.cpp' || echo '$(srcdir)/'`UtiString.cpp

frogprolog-UtiString.obj: UtiString.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frogprolog_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT frogprolog-UtiString.obj -MD -MP -MF "$(DEPDIR)/frogprolog-UtiString.Tpo" -c -o frogprolog-UtiString.obj `if test -f 'UtiString.cpp'; then $(CYGPATH_W) 'UtiString.cpp'; else $(CYGPATH_W) '$(srcdir)/UtiString.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/frogprolog-UtiString.Tpo" "$(DEPDIR)/frogprolog-UtiString.Po"; else rm -f "$(DEPDIR)/frogprolog-UtiString.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='UtiString.cpp' object='frogprolog-UtiString.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frogprolog_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o frogprolog-UtiString.obj `if test -f 'UtiString.cpp'; then $(CYGPATH_W) 'UtiString.cpp'; else $(CYGPATH_W) '$(srcdir)/UtiString.cpp'; fi`

frogprolog-prologbase.o: prologbase.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frogprolog_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT frogprolog-prologbase.o -MD -MP -MF "$(DEPDIR)/frogprolog-prologbase.Tpo" -c -o frogprolog-prologbase.o `test -f 'prologbase.cpp' || echo '$(srcdir)/'`prologbase.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/frogprolog-prologbase.Tpo" "$(DEPDIR)/frogprolog-prologbase.Po"; else rm -f "$(DEPDIR)/frogprolog-prologbase.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='prologbase.cpp' object='frogprolog-prologbase.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frogprolog_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o frogprolog-prologbase.o `test -f 'prologbase.cpp' || echo '$(srcdir)/'`prologbase.cpp

frogprolog-prologbase.obj: prologbase.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frogprolog_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT frogprolog-prologbase.obj -MD -MP -MF "$(DEPDIR)/frogprolog-prologbase.Tpo" -c -o frogprolog-prologbase.obj `if test -f 'prologbase.cpp'; then $(CYGPATH_W) 'prologbase.cpp'; else $(CYGPATH_W) '$(srcdir)/prologbase.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/frogprolog-prologbase.Tpo" "$(DEPDIR)/frogprolog-prologbase.Po"; else rm -f "$(DEPDIR)/frogprolog-prologbase.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='prologbase.cpp' object='frogprolog-prologbase.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frogprolog_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o frogprolog-prologbase.obj `if test -f 'prologbase.cpp'; then $(CYGPATH_W) 'prologbase.cpp'; else $(CYGPATH_W) '$(srcdir)/prologbase.cpp'; fi`

frogprolog-parsersystem.o: parsersystem.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frogprolog_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT frogprolog-parsersystem.o -MD -MP -MF "$(DEPDIR)/frogprolog-parsersystem.Tpo" -c -o frogprolog-parsersystem.o `test -f 'parsersystem.cpp' || echo '$(srcdir)/'`parsersystem.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/frogprolog-parsersystem.Tpo" "$(DEPDIR)/frogprolog-parsersystem.Po"; else rm -f "$(DEPDIR)/frogprolog-parsersystem.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parsersystem.cpp' object='frogprolog-parsersystem.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frogprolog_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o frogprolog-parsersystem.o `test -f 'parsersystem.cpp' || echo '$(srcdir)/'`parsersystem.cpp

frogprolog-parsersystem.obj: parsersystem.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frogprolog_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT frogprolog-parsersystem.obj -MD -MP -MF "$(DEPDIR)/frogprolog-parsersystem.Tpo" -c -o frogprolog-parsersystem.obj `if test -f 'parsersystem.cpp'; then $(CYGPATH_W) 'parsersystem.cpp'; else $(CYGPATH_W) '$(srcdir)/parsersystem.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/frogprolog-parsersystem.Tpo" "$(DEPDIR)/frogprolog-parsersystem.Po"; else rm -f "$(DEPDIR)/frogprolog-parsersystem.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parsersystem.cpp' object='frogprolog-parsersystem.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frogprolog_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o frogprolog-parsersystem.obj `if test -f 'parsersystem.cpp'; then $(CYGPATH_W) 'parsersystem.cpp'; else $(CYGPATH_W) '$(srcdir)/parsersystem.cpp'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:
install-nobase_includeHEADERS: $(nobase_include_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(includedir)" || $(mkdir_p) "$(DESTDIR)$(includedir)"
	@$(am__vpath_adj_setup) \
	list='$(nobase_include_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  $(am__vpath_adj) \
	  echo " $(nobase_includeHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(includedir)/$$f'"; \
	  $(nobase_includeHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(includedir)/$$f"; \
	done

uninstall-nobase_includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@$(am__vpath_adj_setup) \
	list='$(nobase_include_HEADERS)'; for p in $$list; do \
	  $(am__vpath_adj) \
	  echo " rm -f '$(DESTDIR)$(includedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(includedir)/$$f"; \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES) $(PROGRAMS) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(includedir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libLIBRARIES \
	clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am: install-nobase_includeHEADERS

install-exec-am: install-binPROGRAMS install-libLIBRARIES

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-info-am \
	uninstall-libLIBRARIES uninstall-nobase_includeHEADERS

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libLIBRARIES clean-libtool ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-binPROGRAMS install-data \
	install-data-am install-exec install-exec-am install-info \
	install-info-am install-libLIBRARIES install-man \
	install-nobase_includeHEADERS install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-info-am uninstall-libLIBRARIES \
	uninstall-nobase_includeHEADERS

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
